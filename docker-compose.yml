version: '3.6'

services:
  sql:
    image: mysql:5.7
    container_name: sql
    restart: always
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=imse_sql_db
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    expose:
      - 3306
    networks:
      - database
    volumes:
      - mysql-data:/var/lib/mysql

  mongo:
    image: mongo
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=imse_mongo_db
    expose:
      - 27017
    networks:
      - database
    #volumes:
    #  - mongo-data:/var/lib/mongo

  api:
    #this tells docker where to look for the Dockerfile to build the image
    build: ./api 
    #name of your container and also the DNS name (nginx will proxy pass to this container from localhost:8000 when using a browser or Postman)
    container_name: api 
    restart: always
    #EXPOSE defines the ports reachable from INSIDE your docker network
    expose:
      - 8000
    networks:
      - database
      - external

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    expose:
      - 80
    networks:
      - external

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    #PORTS defines ports reachable from the outside world, like a browser or other clients
    ports: 
      - "8000:8000"
      - "8001:8001"
    networks:
      - external

networks:
  database: {}
  external: {}

volumes:
  mysql-data:
    name: imse-mysql-data

  # mongo-data
  #  name: imse-mongo-data
